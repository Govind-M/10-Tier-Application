version: '3.8'

networks:
    default:
        name: microservices-demo
        driver: bridge

services:

# Ad service
    adservice:
        image: manojgovind/onlineboutiquerepo:adservice
        container_name: adservice
        build:
            context: ./
            dockerfile: ./src/adservice/Dockerfile
        ports:
          - "9555:9555"
        networks:
          - default
        restart: unless-stopped    

# Cart Service
    cartservice:
        image: manojgovind/onlineboutiquerepo:cartservice
        container_name: cartservice
        build:
            context: ./
            dockerfile: ./src/cartservice/Dockerfile
        ports:
          - "7070:7070"
        environment:
          - REDIS_ADDR=redis:6379
        depends_on:
          - redis
        networks:
          - default    
        restart: unless-stopped  

# Checkout Service
    checkoutservice:
        image: manojgovind/onlineboutiquerepo:checkoutservice
        container_name: checkoutservice
        build:
            context: ./
            dockerfile: ./src/checkoutservice/Dockerfile
        ports:
          - "5050:5050"
        environment:
          - CART_SERVICE_ADDR=cartservice:7070
          - PAYMENT_SERVICE_ADDR=paymentservice:50051
          - SHIPPING_SERVICE_ADDR=shippingservice:50051
          - EMAIL_SERVICE_ADDR=emailservice:5000
        depends_on:
          - cartservice
          - paymentservice
          - shippingservice
          - emailservice
        networks:
          - default
        restart: unless-stopped  


# Currency Service
    currencyservice:
        image: manojgovind/onlineboutiquerepo:currencyservice
        container_name: currencyservice
        build:
            context: ./
            dockerfile: ./src/currencyservice/Dockerfile
        ports:
         - "7000:7000"
        networks:
          - default  
        restart: unless-stopped   

# Email Service
    emailservice:
        image: manojgovind/onlineboutiquerepo:emailservice
        container_name: emailservice
        build:
            context: ./
            dockerfile: ./src/emailservice/Dockerfile
        ports:
         - "8082:8080"
        networks:
          - default    
        restart: unless-stopped   


# Frontend Service
    frontend:
        image: manojgovind/onlineboutiquerepo:frontend
        container_name: frontend
        build:
            context: ./
            dockerfile: ./src/frontend/Dockerfile
        ports:
          - "8080:8080"
        environment:
          - PRODUCT_CATALOG_SERVICE_ADDR=productcatalogservice:3550
          - CART_SERVICE_ADDR=cartservice:7070
          - RECOMMENDATION_SERVICE_ADDR=recommendationservice:8080
          - CHECKOUT_SERVICE_ADDR=checkoutservice:5050
          - CURRENCY_SERVICE_ADDR=currencyservice:7000
        depends_on:
          - cartservice
          - productcatalogservice
          - recommendationservice
          - checkoutservice
          - currencyservice
        networks:
          - default   
        restart: unless-stopped  


# Payment Service
    paymentservice:
        image: manojgovind/onlineboutiquerepo:paymentservice
        container_name: paymentservice
        build:
            context: ./
            dockerfile: ./src/paymentservice/Dockerfile
        ports:
         - "50051:50051"
        networks:
          - default  
        restart: unless-stopped          


# Productcatalog Service
    productcatalogservice:
        image: manojgovind/onlineboutiquerepo:productcatalogservice
        container_name: productcatalogservice
        build:
            context: ./
            dockerfile: ./src/productcatalogservice/Dockerfile
        ports:
         - "3550:3550"
        networks:
          - default  
        restart: unless-stopped       


# Recommendation Service
    recommendationservice:
        image: manojgovind/onlineboutiquerepo:recommendationservice
        container_name: recommendationservice
        build:
            context: ./
            dockerfile: ./src/recommendationservice/Dockerfile
        ports:
          - "8081:8080"
        environment:
          - PRODUCT_CATALOG_SERVICE_ADDR=productcatalogservice:3550
        depends_on:
          - productcatalogservice
        networks:
          - default    
        restart: unless-stopped 


# Shipping Service
    shippingservice:
        image: manojgovind/onlineboutiquerepo:shippingservice
        container_name: shippingservice
        build:
            context: ./
            dockerfile: ./src/shippingservice/Dockerfile
        ports:
         - "50052:50051"
        networks:
          - default  
        restart: unless-stopped 

# Shoppingassistant Service
    shoppingassistantservice:
        image: manojgovind/onlineboutiquerepo:shoppingassistantservice
        container_name: shoppingassistantservice
        build:
            context: ./
            dockerfile: ./src/shoppingassistantservice/Dockerfile
        ports:
         - "8083:8080"
        networks:
          - default  
        restart: unless-stopped 

# Redis Service
    redis:
        image: redis:alpine
        container_name: redis
        ports:
         - "6379:6379"
        networks:
          - default  
        restart: unless-stopped 